{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport izitoast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nlet countdownInterval;\nlet userSelectedDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n\n    onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    },\n  };\n\n  flatpickr('input[type=\"text\"]', options);\n\n  function addLeadingZero(value) {\n    return value.toString().padStart(2, '0');\n  }\n  \n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\n  const datatimePiker = document.getElementById(\"datetime-picker\");\n  const startBtn =  document.querySelector(\"button[data-start]\");\n\n  datatimePiker.addEventListener(\"change\", () => {\n    const selectedData = new Data(datatimePiker.value);\n\n    const currentData = new Data();\n    if(selectedData < currentData) {\n        window.alert('Please choose a date in the future');\n        startBtn.disabled = true;\n    } else {\n        startBtn.disabled = false;\n    }\n  });\n\n  startBtn.addEventListener(\"click\", () => {\n    let timeDifference = userSelectedDate - new Date();\n\n    countdownInterval = setInterval(() => {\n        const timeObject = convertMs(timeDifference);\n\n    document.querySelector(\"[data-days]\").textContent = addLeadingZero(timeObject.days);\n    document.querySelector(\"[data-hours]\").textContent = addLeadingZero(timeObject.hours);\n    document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(timeObject.minutes);\n    document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(timeObject.seconds);\n\n    if(timeDifference <= 0) {\n        clearInterval(countdownInterval);\n\n        izitoast.show({\n            title: 'Countdown Completed',\n            message: 'The countdown has reached the end date.',\n        }); \n         startBtn.disabled = false;\n    } else {\n        timeDifference -= 1000;\n    }\n    }, 1000);\n\n  });\n\n\n\n\n\n"],"names":["countdownInterval","userSelectedDate","options","selectedDates","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","datatimePiker","startBtn","selectedData","currentData","timeDifference","timeObject","izitoast"],"mappings":"+IAKA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACvBF,EAAmBE,EAAc,EAChC,CACL,EAEEC,EAAU,qBAAsBF,CAAO,EAEvC,SAASG,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACxC,CAED,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,MAAMC,EAAgB,SAAS,eAAe,iBAAiB,EACzDC,EAAY,SAAS,cAAc,oBAAoB,EAE7DD,EAAc,iBAAiB,SAAU,IAAM,CAC7C,MAAME,EAAe,IAAI,KAAKF,EAAc,KAAK,EAE3CG,EAAc,IAAI,KACrBD,EAAeC,GACd,OAAO,MAAM,oCAAoC,EACjDF,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAE5B,CAAG,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACvC,IAAIG,EAAiBhB,EAAmB,IAAI,KAE5CD,EAAoB,YAAY,IAAM,CAClC,MAAMkB,EAAaX,EAAUU,CAAc,EAE/C,SAAS,cAAc,aAAa,EAAE,YAAcZ,EAAea,EAAW,IAAI,EAClF,SAAS,cAAc,cAAc,EAAE,YAAcb,EAAea,EAAW,KAAK,EACpF,SAAS,cAAc,gBAAgB,EAAE,YAAcb,EAAea,EAAW,OAAO,EACxF,SAAS,cAAc,gBAAgB,EAAE,YAAcb,EAAea,EAAW,OAAO,EAErFD,GAAkB,GACjB,cAAcjB,CAAiB,EAE/BmB,EAAS,KAAK,CACV,MAAO,sBACP,QAAS,yCACrB,CAAS,EACAL,EAAS,SAAW,IAErBG,GAAkB,GAErB,EAAE,GAAI,CAEX,CAAG"}